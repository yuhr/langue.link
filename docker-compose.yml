version: '3.6'
networks:
  network:
services:

  'dnsmasq':
    restart: on-failure
    image: andyshinn/dnsmasq
    ports:
      - '53:53/udp'
      - '53:53/tcp'
    volumes:
      - ./docker/dnsmasq/dnsmasq.conf:/etc/dnsmasq.conf:ro
      - ./docker/dnsmasq/hosts:/etc/hosts:ro
      - ./docker/dnsmasq/resolv.conf:/etc/resolv.conf:ro
    cap_add:
      - NET_ADMIN

  'haproxy':
    restart: on-failure
    image: haproxy:alpine
    networks:
      - network
    depends_on:
      - app
      - browser-sync
      - mongo
      - mongo-express
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./docker/haproxy:/usr/local/etc/haproxy:ro

  'mongo':
    container_name: mongo
    restart: on-failure
    image: mongo:latest
    logging:
      driver: none
    environment:
      - 'MONGODB_USER=user'
      - 'MONGODB_PASS=pass'
    networks:
      - network
    command: mongod --smallfiles
    volumes:
      - ./docker/mongo/db:/data/db

  'mongo-express':
    container_name: mongo-express
    restart: on-failure
    image: mongo-express
    logging:
      driver: none
    networks:
      - network
    depends_on:
      - mongo
    ports:
      - '8081:8081'

  'browser-sync':
    container_name: browser-sync
    restart: on-failure
    image: ustwo/browser-sync
    logging:
      driver: none
    networks:
      - network
    depends_on:
      - app
    ports:
      - '8002:8002'
    volumes:
      - ./docker/browser-sync/bs-config.js:/var/browser-sync/bs-config.js:ro
      - ./dst:/var/browser-sync/dst:ro
    working_dir: /var/browser-sync
    command: start --config bs-config.js

#  'webpack': # generates `./node_modules`, watches and builds files
#    container_name: webpack
#    restart: on-failure
#    image: node:alpine
#    volumes:
#      - ./dst:/var/webpack/dst
#      - ./src:/var/webpack/src:ro
#      - ./node_modules:/var/webpack/node_modules
#      - ./docker/webpack/webpack.config.js:/var/webpack/webpack.config.js:ro
#      - ./package.json:/var/webpack/package.json:ro
#      - ./yarn.lock:/var/webpack/yarn.lock:ro
#    working_dir: /var/webpack
#    command: yarn install && yarn .wwebpack

  'app':
    container_name: app
    restart: on-failure
    image: keymetrics/pm2:latest-alpine
    networks:
      - network
    depends_on:
      - mongo
    extra_hosts:
      - 'langue.link:172.17.0.1'
      - 'www.langue.link:172.17.0.1'
    volumes:
      - ./dst:/var/app/dst:ro
      - ./node_modules:/var/app/node_modules:ro
      - ./docker/app/ecosystem.config.js:/var/app/ecosystem.config.js:ro
    working_dir: /var/app
    command: pm2-runtime start ecosystem.config.js --only development
    secrets:
      - source: .keys.json
        target: /var/app/.secret/.keys.json

secrets:
  .keys.json:
    file: ./.secret/.keys.json